! function (e, t) {
    if ("object" == typeof exports && "object" == typeof module) module.exports = t();
    else if ("function" == typeof define && define.amd) define([], t);
    else {
        var r = t();
        for (var o in r)("object" == typeof exports ? exports : e)[o] = r[o]
    }
}(window, function () {
    return function (e) {
        var t = {};

        function r(o) {
            if (t[o]) return t[o].exports;
            var n = t[o] = {
                i: o,
                l: !1,
                exports: {}
            };
            return e[o].call(n.exports, n, n.exports, r), n.l = !0, n.exports
        }
        return r.m = e, r.c = t, r.d = function (e, t, o) {
            r.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: o
            })
        }, r.r = function (e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, r.t = function (e, t) {
            if (1 & t && (e = r(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var o = Object.create(null);
            if (r.r(o), Object.defineProperty(o, "default", {
                    enumerable: !0,
                    value: e
                }), 2 & t && "string" != typeof e)
                for (var n in e) r.d(o, n, function (t) {
                    return e[t]
                }.bind(null, n));
            return o
        }, r.n = function (e) {
            var t = e && e.__esModule ? function () {
                return e.default
            } : function () {
                return e
            };
            return r.d(t, "a", t), t
        }, r.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, r.p = "", r(r.s = 2)
    }([function (e, t) {
        e.exports = {
            init: e => {
                "use strict";
                var t = function () {
                    function e(e) {
                        this.allocList = [], this.allocPointer = 0, this.b = 4, this.m = new Float32Array(e), this.max = this.m.length / this.b
                    }
                    return e.prototype.set = function (e, t) {
                        return this.m[e / this.b] = t, this
                    }, e.prototype.get = function (e) {
                        return this.m[e / this.b]
                    }, e.prototype.malloc = function (e) {
                        for (var t = this, r = [], o = e, n = function () {
                                var e = 0,
                                    n = function () {
                                        if (t.allocPointer >= t.max && (t.allocPointer = 0), ++e >= t.max) throw new Error("No memory left!");
                                        t.allocList[t.allocPointer] ? (t.allocPointer++, n()) : (r.push(t.allocPointer * t.b), t.allocList[t.allocPointer] = !0, t.allocPointer++, o--)
                                    };
                                n()
                            }; o;) n();
                        return r
                    }, e.prototype.free = function (e) {
                        var t = this;
                        return e.forEach(function (e) {
                            t.allocList[e / t.b] = !1, t.m[e / t.b] = 0
                        }), this
                    }, e
                }();
                return e = e || function (e) {
                    return e
                }, new Promise((r, o) => {
                    if ("undefined" == typeof WebAssembly) return void o("No Webassembly support!");
                    const n = new WebAssembly.Memory({
                            initial: 256,
                            maximum: 256
                        }),
                        i = new WebAssembly.Table({
                            initial: 10,
                            maximum: 10,
                            element: "anyfunc"
                        }),
                        a = e => e;
                    let l = 2752,
                        u = l;
                    l += 16;
                    let s = (e => {
                        let t = l;
                        return l = l + e + 15 & -16, t
                    })(4);
                    WebAssembly.instantiateStreaming(new Response(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 7, 1, 96, 2, 127, 127, 1, 127, 3, 2, 1, 0, 7, 8, 1, 4, 95, 97, 100, 100, 0, 0, 10, 9, 1, 7, 0, 32, 1, 32, 0, 106, 11]), {
                        headers: {
                            "content-type": "application/wasm"
                        }
                    }), {
                        env: e({
                            _time: e => Date.now(),
                            ___setErrNo: a,
                            enlargeMemory: a,
                            getTotalMemory: () => 16777216,
                            abortOnCannotGrowMemory: a,
                            abortStackOverflow: a,
                            DYNAMICTOP_PTR: s,
                            tempDoublePtr: u,
                            abort: e => {
                                throw new Error(e)
                            },
                            abortStackOverflow: e => {
                                throw new Error("overflow")
                            },
                            memory: n,
                            memoryBase: 1024,
                            table: i,
                            tableBase: 0,
                            STACKTOP: 0,
                            STACK_MAX: n.buffer.byteLength
                        })
                    }).then(e => {
                        r({
                            exports: Object.keys(e.instance.exports).reduce((t, r) => (t[r.replace("_", "")] = e.instance.exports[r], t), {}),
                            memory: n.buffer,
                            memoryManager: new t(n.buffer),
                            table: i
                        })
                    }).catch(o)
                })
            }
        }
    }, function (e, t, r) {
        r(0).init().then(e => {
            console.log(e.exports.add(1, 2))
        })
    }, function (e, t, r) {
        e.exports = r(1)
    }])
});